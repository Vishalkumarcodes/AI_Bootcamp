# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sPFFz3STbvgl4iXck9poagP5KVuE7QS5
"""

import tensorflow as tf
from tensorflow.keras.datasets import mnist
import numpy as np

# Load dataset
(x_train, y_train), (x_test, y_test) = mnist.load_data()

# Normalize the images to [0, 1]
x_train = x_train / 255.0
x_test = x_test / 255.0

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Flatten, Dense

# Build the model
model = Sequential([
    Flatten(input_shape=(28, 28)),        # Input Layer
    Dense(400, activation='relu'),        # Hidden Layer 1
    Dense(128, activation='relu'),        # Hidden Layer 2
    Dense(10, activation='softmax')       # Output Layer
])

# Compile the model
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Train the model
model.fit(x_train, y_train, epochs=5, batch_size=32, validation_split=0.1)

from sklearn.metrics import classification_report
import numpy as np

# Predict on test set
y_pred = model.predict(x_test)
y_pred_labels = np.argmax(y_pred, axis=1)

# Generate classification report
print(classification_report(y_test, y_pred_labels))